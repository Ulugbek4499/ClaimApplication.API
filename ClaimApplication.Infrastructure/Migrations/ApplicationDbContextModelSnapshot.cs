// <auto-generated />
using System;
using ClaimApplication.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClaimApplication.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClaimApplication.Domain.Entities.AppealPredmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("AppealPredmets");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Entities.AppealType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("AppealTypes");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountOfFine")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("AppealDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("AppealNumber")
                        .HasColumnType("integer");

                    b.Property<int>("AppealPredmetId")
                        .HasColumnType("integer");

                    b.Property<string>("AppealText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AppealTypeId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CalculatedLateCharges")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CertificateGivenDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CertificateNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal?>("MainDebt")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("MembershipAgreementDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MembershipAgreementNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NameOfBussiness")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("numeric");

                    b.Property<string>("PreviousAppeal")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalClaimAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AppealPredmetId");

                    b.HasIndex("AppealTypeId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Entities.ResponsiblePerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("OrdinalNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeOfResponsiblePersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("TypeOfResponsiblePersonId");

                    b.ToTable("ResponsiblePeople");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Entities.TypeOfResponsiblePerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfResponsiblePeople");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Memberships.MembershipApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal?>("AnnualExportAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AnnualImportAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AnnualPaidTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AnnualProductionAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AnnualTurnoverOfEnterprise")
                        .HasColumnType("numeric");

                    b.Property<string>("BankAccount")
                        .HasColumnType("text");

                    b.Property<string>("BithDateOfManager")
                        .HasColumnType("text");

                    b.Property<string>("BrandName")
                        .HasColumnType("text");

                    b.Property<int?>("BussinessCategory")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BussinessRegesteredDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CodeOfBank")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EducationDegree")
                        .HasColumnType("text");

                    b.Property<string>("EmailFirst")
                        .HasColumnType("text");

                    b.Property<string>("EmailSecond")
                        .HasColumnType("text");

                    b.Property<string>("ExtraInformation")
                        .HasColumnType("text");

                    b.Property<string>("ExtraProfile")
                        .HasColumnType("text");

                    b.Property<string>("FaceBookProfile")
                        .HasColumnType("text");

                    b.Property<string>("Fax")
                        .HasColumnType("text");

                    b.Property<int?>("ForeignLanguage")
                        .HasColumnType("integer");

                    b.Property<string>("FullNameOfManager")
                        .HasColumnType("text");

                    b.Property<int?>("Gender")
                        .HasColumnType("integer");

                    b.Property<bool?>("HasCopyOfRegistrationCerteficate")
                        .HasColumnType("boolean");

                    b.Property<string>("Inn")
                        .HasColumnType("text");

                    b.Property<int?>("MainActivityType")
                        .HasColumnType("integer");

                    b.Property<string>("MobileNumberExtra")
                        .HasColumnType("text");

                    b.Property<string>("MobileNumberFirst")
                        .HasColumnType("text");

                    b.Property<string>("MobileNumberSecond")
                        .HasColumnType("text");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NameOfBank")
                        .HasColumnType("text");

                    b.Property<string>("NameOfBusiness")
                        .HasColumnType("text");

                    b.Property<string>("Nationality")
                        .HasColumnType("text");

                    b.Property<int?>("NumberOfEmployees")
                        .HasColumnType("integer");

                    b.Property<string>("NumberOfPassport")
                        .HasColumnType("text");

                    b.Property<string>("OKED")
                        .HasColumnType("text");

                    b.Property<string>("PassportGivenFrom")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("PostIndex")
                        .HasColumnType("text");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("text");

                    b.Property<string>("SeriesOfPassport")
                        .HasColumnType("text");

                    b.Property<string>("SkypeProfile")
                        .HasColumnType("text");

                    b.Property<string>("TelegramProfile")
                        .HasColumnType("text");

                    b.Property<string>("WebSite")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MembershipApplications");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Entities.Application", b =>
                {
                    b.HasOne("ClaimApplication.Domain.Entities.AppealPredmet", "AppealPredmet")
                        .WithMany("Aplications")
                        .HasForeignKey("AppealPredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaimApplication.Domain.Entities.AppealType", "AppealType")
                        .WithMany("Aplications")
                        .HasForeignKey("AppealTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppealPredmet");

                    b.Navigation("AppealType");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Entities.ResponsiblePerson", b =>
                {
                    b.HasOne("ClaimApplication.Domain.Entities.Application", "Application")
                        .WithMany("ResponsiblePeople")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaimApplication.Domain.Entities.TypeOfResponsiblePerson", "TypeOfResponsiblePerson")
                        .WithMany("ResponsiblePerson")
                        .HasForeignKey("TypeOfResponsiblePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("TypeOfResponsiblePerson");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Entities.AppealPredmet", b =>
                {
                    b.Navigation("Aplications");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Entities.AppealType", b =>
                {
                    b.Navigation("Aplications");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Entities.Application", b =>
                {
                    b.Navigation("ResponsiblePeople");
                });

            modelBuilder.Entity("ClaimApplication.Domain.Entities.TypeOfResponsiblePerson", b =>
                {
                    b.Navigation("ResponsiblePerson");
                });
#pragma warning restore 612, 618
        }
    }
}
